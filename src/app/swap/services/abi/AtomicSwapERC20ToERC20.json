{
  "contractName": "AtomicSwapERC20ToERC20",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_swapID",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "_closeTrader",
          "type": "address"
        }
      ],
      "name": "Open",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_swapID",
          "type": "bytes32"
        }
      ],
      "name": "Expire",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_swapID",
          "type": "bytes32"
        }
      ],
      "name": "Close",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_swapID",
          "type": "bytes32"
        },
        {
          "name": "_openValue",
          "type": "uint256"
        },
        {
          "name": "_openContractAddress",
          "type": "address"
        },
        {
          "name": "_closeValue",
          "type": "uint256"
        },
        {
          "name": "_closeTrader",
          "type": "address"
        },
        {
          "name": "_closeContractAddress",
          "type": "address"
        }
      ],
      "name": "open",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_swapID",
          "type": "bytes32"
        }
      ],
      "name": "close",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_swapID",
          "type": "bytes32"
        }
      ],
      "name": "expire",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_swapID",
          "type": "bytes32"
        }
      ],
      "name": "check",
      "outputs": [
        {
          "name": "openValue",
          "type": "uint256"
        },
        {
          "name": "openTrader",
          "type": "address"
        },
        {
          "name": "openContractAddress",
          "type": "address"
        },
        {
          "name": "closeValue",
          "type": "uint256"
        },
        {
          "name": "closeTrader",
          "type": "address"
        },
        {
          "name": "closeContractAddress",
          "type": "address"
        },
        {
          "name": "state",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": "0x6060604052341561000f57600080fd5b6112948061001e6000396000f300606060405260043610610062576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063399e07921461006757806339c79e0c1461018a5780635454a438146101b1578063c644179814610247575b600080fd5b341561007257600080fd5b61008c60048080356000191690602001909190505061026e565b604051808881526020018773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182600381111561017057fe5b60ff16815260200197505050505050505060405180910390f35b341561019557600080fd5b6101af600480803560001916906020019091905050610479565b005b34156101bc57600080fd5b61024560048080356000191690602001909190803590602001909190803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506109c2565b005b341561025257600080fd5b61026c600480803560001916906020019091905050610e98565b005b60008060008060008060006102816111d9565b6000808a6000191660001916815260200190815260200160002060c06040519081016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600382015481526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016005820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509050600160008a6000191660001916815260200190815260200160002060009054906101000a900460ff169150806000015181602001518260400151836060015184608001518560a0015187975097509750975097509750975050919395979092949650565b6104816111d9565b600080836001600381111561049257fe5b60016000836000191660001916815260200190815260200160002060009054906101000a900460ff1660038111156104c657fe5b1415156104d257600080fd5b600080866000191660001916815260200190815260200160002060c06040519081016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600382015481526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016005820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509350600260016000876000191660001916815260200190815260200160002060006101000a81548160ff0219169083600381111561069e57fe5b02179055508360a0015192508273ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e8560800151306040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050602060405180830381600087803b151561077c57600080fd5b5af1151561078957600080fd5b505050604051805190508460600151111515156107a557600080fd5b8273ffffffffffffffffffffffffffffffffffffffff166323b872dd8560800151866020015187606001516040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b151561088757600080fd5b5af1151561089457600080fd5b5050506040518051905015156108a957600080fd5b836040015191508173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb856080015186600001516040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b151561095a57600080fd5b5af1151561096757600080fd5b50505060405180519050151561097c57600080fd5b7fc9d8209586aca26a4f59cc70108e4cf2f637da8cb4133c78a3946bc50581ea288560405180826000191660001916815260200191505060405180910390a15050505050565b60006109cc6111d9565b87600060038111156109da57fe5b60016000836000191660001916815260200190815260200160002060009054906101000a900460ff166003811115610a0e57fe5b141515610a1a57600080fd5b8692508273ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050602060405180830381600087803b1515610aeb57600080fd5b5af11515610af857600080fd5b505050604051805190508811151515610b1057600080fd5b8273ffffffffffffffffffffffffffffffffffffffff166323b872dd33308b6040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b1515610be657600080fd5b5af11515610bf357600080fd5b505050604051805190501515610c0857600080fd5b60c0604051908101604052808981526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018873ffffffffffffffffffffffffffffffffffffffff1681526020018781526020018673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff168152509150816000808b600019166000191681526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506060820151816003015560808201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a08201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555090505060018060008b6000191660001916815260200190815260200160002060006101000a81548160ff02191690836003811115610e1557fe5b02179055507fb5894ff5a344c5160302de0b2027c5b55f4914e9d8e8c11b377b559e5ec789eb89866040518083600019166000191681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a1505050505050505050565b610ea06111d9565b60008260016003811115610eb057fe5b60016000836000191660001916815260200190815260200160002060009054906101000a900460ff166003811115610ee457fe5b141515610ef057600080fd5b600080856000191660001916815260200190815260200160002060c06040519081016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600382015481526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016005820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509250600360016000866000191660001916815260200190815260200160002060006101000a81548160ff021916908360038111156110bc57fe5b0217905550826040015191508173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb846020015185600001516040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b151561117257600080fd5b5af1151561117f57600080fd5b50505060405180519050151561119457600080fd5b7fbddd9b693ea862fad6ecf78fd51c065be26fda94d1f3cad3a7d691453a38a7358460405180826000191660001916815260200191505060405180910390a150505050565b60c06040519081016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815250905600a165627a7a72305820550a18381f221fbba66c970c63e809f0d63aefac6bc9061f4ceba02fdc0b38590029",
  "deployedBytecode": "",
  "sourceMap": "53:3559:0:-;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "53:3559:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3167:442;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1884:812;;;;;;;;;;;;;;;;;;;;;;;;;;;;;892:984;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2704:455;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3167:442;3220:17;3239:18;3259:27;3288:18;3308:19;3329:28;3359:12;3384:16;;:::i;:::-;3403:5;:14;3409:7;3403:14;;;;;;;;;;;;;;;;;3384:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3436:10;:19;3447:7;3436:19;;;;;;;;;;;;;;;;;;;;;;;;;;;3428:27;;3474:4;:14;;;3490:4;:15;;;3507:4;:24;;;3533:4;:15;;;3550:4;:16;;;3568:4;:25;;;3595:5;3466:135;;;;;;;;;;;;;;3167:442;;;;;;;;;;:::o;1884:812::-;1985:16;;:::i;:::-;2163:24;2519:23;1937:7;852:11;829:34;;;;;;;;:10;:19;840:7;829:19;;;;;;;;;;;;;;;;;;;;;;;;;;;:34;;;;;;;;;820:44;;;;;;;;2004:5;:14;2010:7;2004:14;;;;;;;;;;;;;;;;;1985:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2051:13;2029:10;:19;2040:7;2029:19;;;;;;;;;;;;;;;;;;:35;;;;;;;;;;;;;;;;;;;;;;;;2196:4;:25;;;2163:59;;2260:18;:28;;;2289:4;:16;;;2315:4;2260:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2241:4;:15;;;:80;;2233:89;;;;;;;;2341:18;:31;;;2373:4;:16;;;2391:4;:15;;;2408:4;:15;;;2341:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2333:92;;;;;;;;2551:4;:24;;;2519:57;;2595:17;:26;;;2622:4;:16;;;2640:4;:14;;;2595:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2587:69;;;;;;;;2674:14;2680:7;2674:14;;;;;;;;;;;;;;;;;;;;;;;;1884:812;;;;;:::o;892:984::-;1160:23;1446:16;;:::i;:::-;1071:7;726:14;703:37;;;;;;;;:10;:19;714:7;703:19;;;;;;;;;;;;;;;;;;;;;;;;;;;:37;;;;;;;;;694:47;;;;;;;;1192:20;1160:53;;1246:17;:27;;;1274:10;1294:4;1246:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1232:10;:68;;1224:77;;;;;;;;1320:17;:30;;;1351:10;1371:4;1378:10;1320:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1312:78;;;;;;;;1465:282;;;;;;;;;1496:10;1465:282;;;;1533:10;1465:282;;;;;;1579:20;1465:282;;;;;;1626:11;1465:282;;;;1665:12;1465:282;;;;;;1714:21;1465:282;;;;;1446:301;;1775:4;1758:5;:14;1764:7;1758:14;;;;;;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1812:11;1790:10;:19;1801:7;1790:19;;;;;;;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;;;;;;;1841:27;1846:7;1855:12;1841:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;892:984;;;;;;;;;:::o;2704:455::-;2807:16;;:::i;:::-;2982:23;2758:7;852:11;829:34;;;;;;;;:10;:19;840:7;829:19;;;;;;;;;;;;;;;;;;;;;;;;;;;:34;;;;;;;;;820:44;;;;;;;;2826:5;:14;2832:7;2826:14;;;;;;;;;;;;;;;;;2807:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2873:14;2851:10;:19;2862:7;2851:19;;;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;;;;;;;3014:4;:24;;;2982:57;;3058:17;:26;;;3085:4;:15;;;3102:4;:14;;;3058:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3050:68;;;;;;;;3136:15;3143:7;3136:15;;;;;;;;;;;;;;;;;;;;;;;;2704:455;;;;:::o;53:3559::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.4.17;\r\n\r\nimport \"./ERC20.sol\";\r\n\r\ncontract AtomicSwapERC20ToERC20 {\r\n\r\n    struct Swap {\r\n        uint256 openValue;\r\n        address openTrader;\r\n        address openContractAddress;\r\n        uint256 closeValue;\r\n        address closeTrader;\r\n        address closeContractAddress;\r\n    }\r\n\r\n    enum States {\r\n        INVALID,\r\n        OPEN,\r\n        CLOSED,\r\n        EXPIRED\r\n    }\r\n\r\n    mapping (bytes32 => Swap) private swaps;\r\n    mapping (bytes32 => States) private swapStates;\r\n\r\n    event Open(bytes32 _swapID, address _closeTrader);\r\n    event Expire(bytes32 _swapID);\r\n    event Close(bytes32 _swapID);\r\n\r\n    modifier onlyInvalidSwaps(bytes32 _swapID) {\r\n        require (swapStates[_swapID] == States.INVALID);\r\n        _;\r\n    }\r\n\r\n    modifier onlyOpenSwaps(bytes32 _swapID) {\r\n        require (swapStates[_swapID] == States.OPEN);\r\n        _;\r\n    }\r\n\r\n    function open(bytes32 _swapID, uint256 _openValue, address _openContractAddress, uint256 _closeValue, address _closeTrader, address _closeContractAddress) public onlyInvalidSwaps(_swapID) {\r\n        // Transfer value from the opening trader to this contract.\r\n        ERC20 openERC20Contract = ERC20(_openContractAddress);\r\n        require(_openValue <= openERC20Contract.allowance(msg.sender, address(this)));\r\n        require(openERC20Contract.transferFrom(msg.sender, address(this), _openValue));\r\n\r\n        // Store the details of the swap.\r\n        Swap memory swap = Swap({\r\n            openValue: _openValue,\r\n            openTrader: msg.sender,\r\n            openContractAddress: _openContractAddress,\r\n            closeValue: _closeValue,\r\n            closeTrader: _closeTrader,\r\n            closeContractAddress: _closeContractAddress\r\n        });\r\n        swaps[_swapID] = swap;\r\n        swapStates[_swapID] = States.OPEN;\r\n\r\n        emit Open(_swapID, _closeTrader);\r\n    }\r\n\r\n    function close(bytes32 _swapID) public onlyOpenSwaps(_swapID) {\r\n        // Close the swap.\r\n        Swap memory swap = swaps[_swapID];\r\n        swapStates[_swapID] = States.CLOSED;\r\n\r\n        // Transfer the closing funds from the closing trader to the opening trader.\r\n        ERC20 closeERC20Contract = ERC20(swap.closeContractAddress);\r\n        require(swap.closeValue <= closeERC20Contract.allowance(swap.closeTrader, address(this)));\r\n        require(closeERC20Contract.transferFrom(swap.closeTrader, swap.openTrader, swap.closeValue));\r\n\r\n        // Transfer the opening funds from this contract to the closing trader.\r\n        ERC20 openERC20Contract = ERC20(swap.openContractAddress);\r\n        require(openERC20Contract.transfer(swap.closeTrader, swap.openValue));\r\n\r\n        emit Close(_swapID);\r\n    }\r\n\r\n    function expire(bytes32 _swapID) public onlyOpenSwaps(_swapID) {\r\n        // Expire the swap.\r\n        Swap memory swap = swaps[_swapID];\r\n        swapStates[_swapID] = States.EXPIRED;\r\n\r\n        // Transfer opening value from this contract back to the opening trader.\r\n        ERC20 openERC20Contract = ERC20(swap.openContractAddress);\r\n        require(openERC20Contract.transfer(swap.openTrader, swap.openValue));\r\n\r\n        emit Expire(_swapID);\r\n    }\r\n\r\n    function check(bytes32 _swapID) public view returns (uint256 openValue, address openTrader, address openContractAddress, uint256 closeValue, address closeTrader, address closeContractAddress, States state) {\r\n        Swap memory swap = swaps[_swapID];\r\n        state = swapStates[_swapID];\r\n        return (swap.openValue, swap.openTrader, swap.openContractAddress, swap.closeValue, swap.closeTrader, swap.closeContractAddress, state);\r\n    }\r\n}",
  "sourcePath": "C:\\Projects\\Aerum\\aerumnet\\solidity-aerum-network\\contracts\\swap\\AtomicSwapERC20ToERC20.sol",
  "ast": {
    "absolutePath": "/C/Projects/Aerum/aerumnet/solidity-aerum-network/contracts/swap/AtomicSwapERC20ToERC20.sol",
    "exportedSymbols": {
      "AtomicSwapERC20ToERC20": [
        319
      ]
    },
    "id": 320,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:0"
      },
      {
        "absolutePath": "/C/Projects/Aerum/aerumnet/solidity-aerum-network/contracts/swap/ERC20.sol",
        "file": "./ERC20.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 320,
        "sourceUnit": 645,
        "src": "28:21:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 319,
        "linearizedBaseContracts": [
          319
        ],
        "name": "AtomicSwapERC20ToERC20",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "AtomicSwapERC20ToERC20.Swap",
            "id": 15,
            "members": [
              {
                "constant": false,
                "id": 4,
                "name": "openValue",
                "nodeType": "VariableDeclaration",
                "scope": 15,
                "src": "117:17:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "117:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 6,
                "name": "openTrader",
                "nodeType": "VariableDeclaration",
                "scope": 15,
                "src": "145:18:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 5,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "145:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 8,
                "name": "openContractAddress",
                "nodeType": "VariableDeclaration",
                "scope": 15,
                "src": "174:27:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 7,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "174:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 10,
                "name": "closeValue",
                "nodeType": "VariableDeclaration",
                "scope": 15,
                "src": "212:18:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 9,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "212:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 12,
                "name": "closeTrader",
                "nodeType": "VariableDeclaration",
                "scope": 15,
                "src": "241:19:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 11,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "241:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 14,
                "name": "closeContractAddress",
                "nodeType": "VariableDeclaration",
                "scope": 15,
                "src": "271:28:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 13,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "271:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Swap",
            "nodeType": "StructDefinition",
            "scope": 319,
            "src": "94:213:0",
            "visibility": "public"
          },
          {
            "canonicalName": "AtomicSwapERC20ToERC20.States",
            "id": 20,
            "members": [
              {
                "id": 16,
                "name": "INVALID",
                "nodeType": "EnumValue",
                "src": "338:7:0"
              },
              {
                "id": 17,
                "name": "OPEN",
                "nodeType": "EnumValue",
                "src": "356:4:0"
              },
              {
                "id": 18,
                "name": "CLOSED",
                "nodeType": "EnumValue",
                "src": "371:6:0"
              },
              {
                "id": 19,
                "name": "EXPIRED",
                "nodeType": "EnumValue",
                "src": "388:7:0"
              }
            ],
            "name": "States",
            "nodeType": "EnumDefinition",
            "src": "315:87:0"
          },
          {
            "constant": false,
            "id": 24,
            "name": "swaps",
            "nodeType": "VariableDeclaration",
            "scope": 319,
            "src": "410:39:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Swap_$15_storage_$",
              "typeString": "mapping(bytes32 => struct AtomicSwapERC20ToERC20.Swap storage ref)"
            },
            "typeName": {
              "id": 23,
              "keyType": {
                "id": 21,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "419:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "410:25:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Swap_$15_storage_$",
                "typeString": "mapping(bytes32 => struct AtomicSwapERC20ToERC20.Swap storage ref)"
              },
              "valueType": {
                "contractScope": null,
                "id": 22,
                "name": "Swap",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 15,
                "src": "430:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Swap_$15_storage_ptr",
                  "typeString": "struct AtomicSwapERC20ToERC20.Swap storage pointer"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 28,
            "name": "swapStates",
            "nodeType": "VariableDeclaration",
            "scope": 319,
            "src": "456:46:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_enum$_States_$20_$",
              "typeString": "mapping(bytes32 => enum AtomicSwapERC20ToERC20.States)"
            },
            "typeName": {
              "id": 27,
              "keyType": {
                "id": 25,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "465:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "456:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_enum$_States_$20_$",
                "typeString": "mapping(bytes32 => enum AtomicSwapERC20ToERC20.States)"
              },
              "valueType": {
                "contractScope": null,
                "id": 26,
                "name": "States",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 20,
                "src": "476:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_States_$20",
                  "typeString": "enum AtomicSwapERC20ToERC20.States"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 34,
            "name": "Open",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 33,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30,
                  "indexed": false,
                  "name": "_swapID",
                  "nodeType": "VariableDeclaration",
                  "scope": 34,
                  "src": "522:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 29,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "522:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32,
                  "indexed": false,
                  "name": "_closeTrader",
                  "nodeType": "VariableDeclaration",
                  "scope": 34,
                  "src": "539:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 31,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "539:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "521:39:0"
            },
            "src": "511:50:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 38,
            "name": "Expire",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 37,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36,
                  "indexed": false,
                  "name": "_swapID",
                  "nodeType": "VariableDeclaration",
                  "scope": 38,
                  "src": "580:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 35,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "580:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "579:17:0"
            },
            "src": "567:30:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 42,
            "name": "Close",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 41,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40,
                  "indexed": false,
                  "name": "_swapID",
                  "nodeType": "VariableDeclaration",
                  "scope": 42,
                  "src": "615:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 39,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "615:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "614:17:0"
            },
            "src": "603:29:0"
          },
          {
            "body": {
              "id": 56,
              "nodeType": "Block",
              "src": "683:78:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_States_$20",
                          "typeString": "enum AtomicSwapERC20ToERC20.States"
                        },
                        "id": 52,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 47,
                            "name": "swapStates",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28,
                            "src": "703:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_enum$_States_$20_$",
                              "typeString": "mapping(bytes32 => enum AtomicSwapERC20ToERC20.States)"
                            }
                          },
                          "id": 49,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 48,
                            "name": "_swapID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44,
                            "src": "714:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "703:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_States_$20",
                            "typeString": "enum AtomicSwapERC20ToERC20.States"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 50,
                            "name": "States",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20,
                            "src": "726:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_States_$20_$",
                              "typeString": "type(enum AtomicSwapERC20ToERC20.States)"
                            }
                          },
                          "id": 51,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "INVALID",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "726:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_States_$20",
                            "typeString": "enum AtomicSwapERC20ToERC20.States"
                          }
                        },
                        "src": "703:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 46,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 660,
                      "src": "694:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 53,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "694:47:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54,
                  "nodeType": "ExpressionStatement",
                  "src": "694:47:0"
                },
                {
                  "id": 55,
                  "nodeType": "PlaceholderStatement",
                  "src": "752:1:0"
                }
              ]
            },
            "documentation": null,
            "id": 57,
            "name": "onlyInvalidSwaps",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 45,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44,
                  "name": "_swapID",
                  "nodeType": "VariableDeclaration",
                  "scope": 57,
                  "src": "666:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 43,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "666:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "665:17:0"
            },
            "src": "640:121:0",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 71,
              "nodeType": "Block",
              "src": "809:75:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_States_$20",
                          "typeString": "enum AtomicSwapERC20ToERC20.States"
                        },
                        "id": 67,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 62,
                            "name": "swapStates",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28,
                            "src": "829:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_enum$_States_$20_$",
                              "typeString": "mapping(bytes32 => enum AtomicSwapERC20ToERC20.States)"
                            }
                          },
                          "id": 64,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 63,
                            "name": "_swapID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59,
                            "src": "840:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "829:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_States_$20",
                            "typeString": "enum AtomicSwapERC20ToERC20.States"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 65,
                            "name": "States",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20,
                            "src": "852:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_States_$20_$",
                              "typeString": "type(enum AtomicSwapERC20ToERC20.States)"
                            }
                          },
                          "id": 66,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "OPEN",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "852:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_States_$20",
                            "typeString": "enum AtomicSwapERC20ToERC20.States"
                          }
                        },
                        "src": "829:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 61,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 660,
                      "src": "820:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 68,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "820:44:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 69,
                  "nodeType": "ExpressionStatement",
                  "src": "820:44:0"
                },
                {
                  "id": 70,
                  "nodeType": "PlaceholderStatement",
                  "src": "875:1:0"
                }
              ]
            },
            "documentation": null,
            "id": 72,
            "name": "onlyOpenSwaps",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 60,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59,
                  "name": "_swapID",
                  "nodeType": "VariableDeclaration",
                  "scope": 72,
                  "src": "792:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 58,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "792:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "791:17:0"
            },
            "src": "769:115:0",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 151,
              "nodeType": "Block",
              "src": "1080:796:0",
              "statements": [
                {
                  "assignments": [
                    91
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 91,
                      "name": "openERC20Contract",
                      "nodeType": "VariableDeclaration",
                      "scope": 152,
                      "src": "1160:23:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$644",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 90,
                        "name": "ERC20",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 644,
                        "src": "1160:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$644",
                          "typeString": "contract ERC20"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 95,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 93,
                        "name": "_openContractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78,
                        "src": "1192:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 92,
                      "name": "ERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 644,
                      "src": "1186:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC20_$644_$",
                        "typeString": "type(contract ERC20)"
                      }
                    },
                    "id": 94,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1186:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$644",
                      "typeString": "contract ERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1160:53:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 97,
                          "name": "_openValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76,
                          "src": "1232:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 100,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 657,
                                "src": "1274:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 101,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1274:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 103,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 670,
                                  "src": "1294:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_AtomicSwapERC20ToERC20_$319",
                                    "typeString": "contract AtomicSwapERC20ToERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_AtomicSwapERC20ToERC20_$319",
                                    "typeString": "contract AtomicSwapERC20ToERC20"
                                  }
                                ],
                                "id": 102,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1286:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": "address"
                              },
                              "id": 104,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1286:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 98,
                              "name": "openERC20Contract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 91,
                              "src": "1246:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$644",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 99,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "allowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 614,
                            "src": "1246:27:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 105,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1246:54:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1232:68:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 96,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 660,
                      "src": "1224:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1224:77:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 108,
                  "nodeType": "ExpressionStatement",
                  "src": "1224:77:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 112,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 657,
                              "src": "1351:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 113,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1351:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 115,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 670,
                                "src": "1371:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AtomicSwapERC20ToERC20_$319",
                                  "typeString": "contract AtomicSwapERC20ToERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_AtomicSwapERC20ToERC20_$319",
                                  "typeString": "contract AtomicSwapERC20ToERC20"
                                }
                              ],
                              "id": 114,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1363:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 116,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1363:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 117,
                            "name": "_openValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76,
                            "src": "1378:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 110,
                            "name": "openERC20Contract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 91,
                            "src": "1320:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$644",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 634,
                          "src": "1320:30:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1320:69:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 109,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 660,
                      "src": "1312:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1312:78:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 120,
                  "nodeType": "ExpressionStatement",
                  "src": "1312:78:0"
                },
                {
                  "assignments": [
                    122
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 122,
                      "name": "swap",
                      "nodeType": "VariableDeclaration",
                      "scope": 152,
                      "src": "1446:16:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Swap_$15_memory_ptr",
                        "typeString": "struct AtomicSwapERC20ToERC20.Swap memory"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 121,
                        "name": "Swap",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 15,
                        "src": "1446:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$15_storage_ptr",
                          "typeString": "struct AtomicSwapERC20ToERC20.Swap storage pointer"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 132,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 124,
                        "name": "_openValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76,
                        "src": "1496:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 125,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 657,
                          "src": "1533:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1533:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 127,
                        "name": "_openContractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78,
                        "src": "1579:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 128,
                        "name": "_closeValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80,
                        "src": "1626:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 129,
                        "name": "_closeTrader",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82,
                        "src": "1665:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 130,
                        "name": "_closeContractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84,
                        "src": "1714:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": null,
                      "id": 123,
                      "name": "Swap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15,
                      "src": "1465:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Swap_$15_storage_ptr_$",
                        "typeString": "type(struct AtomicSwapERC20ToERC20.Swap storage pointer)"
                      }
                    },
                    "id": 131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "openValue",
                      "openTrader",
                      "openContractAddress",
                      "closeValue",
                      "closeTrader",
                      "closeContractAddress"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "1465:282:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Swap_$15_memory",
                      "typeString": "struct AtomicSwapERC20ToERC20.Swap memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1446:301:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 133,
                        "name": "swaps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24,
                        "src": "1758:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Swap_$15_storage_$",
                          "typeString": "mapping(bytes32 => struct AtomicSwapERC20ToERC20.Swap storage ref)"
                        }
                      },
                      "id": 135,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 134,
                        "name": "_swapID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74,
                        "src": "1764:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1758:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Swap_$15_storage",
                        "typeString": "struct AtomicSwapERC20ToERC20.Swap storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 136,
                      "name": "swap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 122,
                      "src": "1775:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Swap_$15_memory_ptr",
                        "typeString": "struct AtomicSwapERC20ToERC20.Swap memory"
                      }
                    },
                    "src": "1758:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Swap_$15_storage",
                      "typeString": "struct AtomicSwapERC20ToERC20.Swap storage ref"
                    }
                  },
                  "id": 138,
                  "nodeType": "ExpressionStatement",
                  "src": "1758:21:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 139,
                        "name": "swapStates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28,
                        "src": "1790:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_enum$_States_$20_$",
                          "typeString": "mapping(bytes32 => enum AtomicSwapERC20ToERC20.States)"
                        }
                      },
                      "id": 141,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 140,
                        "name": "_swapID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74,
                        "src": "1801:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1790:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_States_$20",
                        "typeString": "enum AtomicSwapERC20ToERC20.States"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 142,
                        "name": "States",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "1812:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_States_$20_$",
                          "typeString": "type(enum AtomicSwapERC20ToERC20.States)"
                        }
                      },
                      "id": 143,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "OPEN",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1812:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_States_$20",
                        "typeString": "enum AtomicSwapERC20ToERC20.States"
                      }
                    },
                    "src": "1790:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_States_$20",
                      "typeString": "enum AtomicSwapERC20ToERC20.States"
                    }
                  },
                  "id": 145,
                  "nodeType": "ExpressionStatement",
                  "src": "1790:33:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 147,
                        "name": "_swapID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74,
                        "src": "1846:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 148,
                        "name": "_closeTrader",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82,
                        "src": "1855:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 146,
                      "name": "Open",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34,
                      "src": "1841:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1841:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 150,
                  "nodeType": "EmitStatement",
                  "src": "1836:32:0"
                }
              ]
            },
            "documentation": null,
            "id": 152,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 87,
                    "name": "_swapID",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 74,
                    "src": "1071:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 88,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 86,
                  "name": "onlyInvalidSwaps",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 57,
                  "src": "1054:16:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_bytes32_$",
                    "typeString": "modifier (bytes32)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1054:25:0"
              }
            ],
            "name": "open",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 85,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74,
                  "name": "_swapID",
                  "nodeType": "VariableDeclaration",
                  "scope": 152,
                  "src": "906:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 73,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "906:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 76,
                  "name": "_openValue",
                  "nodeType": "VariableDeclaration",
                  "scope": 152,
                  "src": "923:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 75,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "923:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 78,
                  "name": "_openContractAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 152,
                  "src": "943:28:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 77,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "943:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 80,
                  "name": "_closeValue",
                  "nodeType": "VariableDeclaration",
                  "scope": 152,
                  "src": "973:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 79,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "973:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 82,
                  "name": "_closeTrader",
                  "nodeType": "VariableDeclaration",
                  "scope": 152,
                  "src": "994:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 81,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "994:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 84,
                  "name": "_closeContractAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 152,
                  "src": "1016:29:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 83,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1016:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "905:141:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 89,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1080:0:0"
            },
            "scope": 319,
            "src": "892:984:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 227,
              "nodeType": "Block",
              "src": "1946:750:0",
              "statements": [
                {
                  "assignments": [
                    161
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 161,
                      "name": "swap",
                      "nodeType": "VariableDeclaration",
                      "scope": 228,
                      "src": "1985:16:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Swap_$15_memory_ptr",
                        "typeString": "struct AtomicSwapERC20ToERC20.Swap memory"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 160,
                        "name": "Swap",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 15,
                        "src": "1985:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$15_storage_ptr",
                          "typeString": "struct AtomicSwapERC20ToERC20.Swap storage pointer"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 165,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 162,
                      "name": "swaps",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24,
                      "src": "2004:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Swap_$15_storage_$",
                        "typeString": "mapping(bytes32 => struct AtomicSwapERC20ToERC20.Swap storage ref)"
                      }
                    },
                    "id": 164,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 163,
                      "name": "_swapID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 154,
                      "src": "2010:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2004:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Swap_$15_storage",
                      "typeString": "struct AtomicSwapERC20ToERC20.Swap storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1985:33:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 166,
                        "name": "swapStates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28,
                        "src": "2029:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_enum$_States_$20_$",
                          "typeString": "mapping(bytes32 => enum AtomicSwapERC20ToERC20.States)"
                        }
                      },
                      "id": 168,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 167,
                        "name": "_swapID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 154,
                        "src": "2040:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2029:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_States_$20",
                        "typeString": "enum AtomicSwapERC20ToERC20.States"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 169,
                        "name": "States",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "2051:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_States_$20_$",
                          "typeString": "type(enum AtomicSwapERC20ToERC20.States)"
                        }
                      },
                      "id": 170,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "CLOSED",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2051:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_States_$20",
                        "typeString": "enum AtomicSwapERC20ToERC20.States"
                      }
                    },
                    "src": "2029:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_States_$20",
                      "typeString": "enum AtomicSwapERC20ToERC20.States"
                    }
                  },
                  "id": 172,
                  "nodeType": "ExpressionStatement",
                  "src": "2029:35:0"
                },
                {
                  "assignments": [
                    174
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 174,
                      "name": "closeERC20Contract",
                      "nodeType": "VariableDeclaration",
                      "scope": 228,
                      "src": "2163:24:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$644",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 173,
                        "name": "ERC20",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 644,
                        "src": "2163:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$644",
                          "typeString": "contract ERC20"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 179,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 176,
                          "name": "swap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 161,
                          "src": "2196:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$15_memory_ptr",
                            "typeString": "struct AtomicSwapERC20ToERC20.Swap memory"
                          }
                        },
                        "id": 177,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "closeContractAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14,
                        "src": "2196:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 175,
                      "name": "ERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 644,
                      "src": "2190:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC20_$644_$",
                        "typeString": "type(contract ERC20)"
                      }
                    },
                    "id": 178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2190:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$644",
                      "typeString": "contract ERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2163:59:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 181,
                            "name": "swap",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 161,
                            "src": "2241:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Swap_$15_memory_ptr",
                              "typeString": "struct AtomicSwapERC20ToERC20.Swap memory"
                            }
                          },
                          "id": 182,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "closeValue",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10,
                          "src": "2241:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 185,
                                "name": "swap",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 161,
                                "src": "2289:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Swap_$15_memory_ptr",
                                  "typeString": "struct AtomicSwapERC20ToERC20.Swap memory"
                                }
                              },
                              "id": 186,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "closeTrader",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 12,
                              "src": "2289:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 188,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 670,
                                  "src": "2315:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_AtomicSwapERC20ToERC20_$319",
                                    "typeString": "contract AtomicSwapERC20ToERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_AtomicSwapERC20ToERC20_$319",
                                    "typeString": "contract AtomicSwapERC20ToERC20"
                                  }
                                ],
                                "id": 187,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2307:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": "address"
                              },
                              "id": 189,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2307:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 183,
                              "name": "closeERC20Contract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 174,
                              "src": "2260:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$644",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 184,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "allowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 614,
                            "src": "2260:28:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 190,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2260:61:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2241:80:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 180,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 660,
                      "src": "2233:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2233:89:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 193,
                  "nodeType": "ExpressionStatement",
                  "src": "2233:89:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 197,
                              "name": "swap",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 161,
                              "src": "2373:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Swap_$15_memory_ptr",
                                "typeString": "struct AtomicSwapERC20ToERC20.Swap memory"
                              }
                            },
                            "id": 198,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "closeTrader",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 12,
                            "src": "2373:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 199,
                              "name": "swap",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 161,
                              "src": "2391:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Swap_$15_memory_ptr",
                                "typeString": "struct AtomicSwapERC20ToERC20.Swap memory"
                              }
                            },
                            "id": 200,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "openTrader",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 6,
                            "src": "2391:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 201,
                              "name": "swap",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 161,
                              "src": "2408:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Swap_$15_memory_ptr",
                                "typeString": "struct AtomicSwapERC20ToERC20.Swap memory"
                              }
                            },
                            "id": 202,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "closeValue",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10,
                            "src": "2408:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 195,
                            "name": "closeERC20Contract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 174,
                            "src": "2341:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$644",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 196,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 634,
                          "src": "2341:31:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 203,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2341:83:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 194,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 660,
                      "src": "2333:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 204,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2333:92:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 205,
                  "nodeType": "ExpressionStatement",
                  "src": "2333:92:0"
                },
                {
                  "assignments": [
                    207
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 207,
                      "name": "openERC20Contract",
                      "nodeType": "VariableDeclaration",
                      "scope": 228,
                      "src": "2519:23:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$644",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 206,
                        "name": "ERC20",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 644,
                        "src": "2519:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$644",
                          "typeString": "contract ERC20"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 212,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 209,
                          "name": "swap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 161,
                          "src": "2551:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$15_memory_ptr",
                            "typeString": "struct AtomicSwapERC20ToERC20.Swap memory"
                          }
                        },
                        "id": 210,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "openContractAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 8,
                        "src": "2551:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 208,
                      "name": "ERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 644,
                      "src": "2545:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC20_$644_$",
                        "typeString": "type(contract ERC20)"
                      }
                    },
                    "id": 211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2545:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$644",
                      "typeString": "contract ERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2519:57:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 216,
                              "name": "swap",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 161,
                              "src": "2622:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Swap_$15_memory_ptr",
                                "typeString": "struct AtomicSwapERC20ToERC20.Swap memory"
                              }
                            },
                            "id": 217,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "closeTrader",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 12,
                            "src": "2622:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 218,
                              "name": "swap",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 161,
                              "src": "2640:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Swap_$15_memory_ptr",
                                "typeString": "struct AtomicSwapERC20ToERC20.Swap memory"
                              }
                            },
                            "id": 219,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "openValue",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4,
                            "src": "2640:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 214,
                            "name": "openERC20Contract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 207,
                            "src": "2595:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$644",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 215,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 623,
                          "src": "2595:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 220,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2595:60:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 213,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 660,
                      "src": "2587:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2587:69:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 222,
                  "nodeType": "ExpressionStatement",
                  "src": "2587:69:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 224,
                        "name": "_swapID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 154,
                        "src": "2680:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 223,
                      "name": "Close",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42,
                      "src": "2674:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32)"
                      }
                    },
                    "id": 225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2674:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 226,
                  "nodeType": "EmitStatement",
                  "src": "2669:19:0"
                }
              ]
            },
            "documentation": null,
            "id": 228,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 157,
                    "name": "_swapID",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 154,
                    "src": "1937:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 158,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 156,
                  "name": "onlyOpenSwaps",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 72,
                  "src": "1923:13:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_bytes32_$",
                    "typeString": "modifier (bytes32)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1923:22:0"
              }
            ],
            "name": "close",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 155,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 154,
                  "name": "_swapID",
                  "nodeType": "VariableDeclaration",
                  "scope": 228,
                  "src": "1899:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 153,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1899:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1898:17:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 159,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1946:0:0"
            },
            "scope": 319,
            "src": "1884:812:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 270,
              "nodeType": "Block",
              "src": "2767:392:0",
              "statements": [
                {
                  "assignments": [
                    237
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 237,
                      "name": "swap",
                      "nodeType": "VariableDeclaration",
                      "scope": 271,
                      "src": "2807:16:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Swap_$15_memory_ptr",
                        "typeString": "struct AtomicSwapERC20ToERC20.Swap memory"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 236,
                        "name": "Swap",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 15,
                        "src": "2807:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$15_storage_ptr",
                          "typeString": "struct AtomicSwapERC20ToERC20.Swap storage pointer"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 241,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 238,
                      "name": "swaps",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24,
                      "src": "2826:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Swap_$15_storage_$",
                        "typeString": "mapping(bytes32 => struct AtomicSwapERC20ToERC20.Swap storage ref)"
                      }
                    },
                    "id": 240,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 239,
                      "name": "_swapID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 230,
                      "src": "2832:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2826:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Swap_$15_storage",
                      "typeString": "struct AtomicSwapERC20ToERC20.Swap storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2807:33:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 242,
                        "name": "swapStates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28,
                        "src": "2851:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_enum$_States_$20_$",
                          "typeString": "mapping(bytes32 => enum AtomicSwapERC20ToERC20.States)"
                        }
                      },
                      "id": 244,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 243,
                        "name": "_swapID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 230,
                        "src": "2862:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2851:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_States_$20",
                        "typeString": "enum AtomicSwapERC20ToERC20.States"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 245,
                        "name": "States",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "2873:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_States_$20_$",
                          "typeString": "type(enum AtomicSwapERC20ToERC20.States)"
                        }
                      },
                      "id": 246,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "EXPIRED",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2873:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_States_$20",
                        "typeString": "enum AtomicSwapERC20ToERC20.States"
                      }
                    },
                    "src": "2851:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_States_$20",
                      "typeString": "enum AtomicSwapERC20ToERC20.States"
                    }
                  },
                  "id": 248,
                  "nodeType": "ExpressionStatement",
                  "src": "2851:36:0"
                },
                {
                  "assignments": [
                    250
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 250,
                      "name": "openERC20Contract",
                      "nodeType": "VariableDeclaration",
                      "scope": 271,
                      "src": "2982:23:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$644",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 249,
                        "name": "ERC20",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 644,
                        "src": "2982:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$644",
                          "typeString": "contract ERC20"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 255,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 252,
                          "name": "swap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 237,
                          "src": "3014:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$15_memory_ptr",
                            "typeString": "struct AtomicSwapERC20ToERC20.Swap memory"
                          }
                        },
                        "id": 253,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "openContractAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 8,
                        "src": "3014:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 251,
                      "name": "ERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 644,
                      "src": "3008:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC20_$644_$",
                        "typeString": "type(contract ERC20)"
                      }
                    },
                    "id": 254,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3008:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$644",
                      "typeString": "contract ERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2982:57:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 259,
                              "name": "swap",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 237,
                              "src": "3085:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Swap_$15_memory_ptr",
                                "typeString": "struct AtomicSwapERC20ToERC20.Swap memory"
                              }
                            },
                            "id": 260,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "openTrader",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 6,
                            "src": "3085:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 261,
                              "name": "swap",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 237,
                              "src": "3102:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Swap_$15_memory_ptr",
                                "typeString": "struct AtomicSwapERC20ToERC20.Swap memory"
                              }
                            },
                            "id": 262,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "openValue",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4,
                            "src": "3102:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 257,
                            "name": "openERC20Contract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 250,
                            "src": "3058:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$644",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 258,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 623,
                          "src": "3058:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 263,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3058:59:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 256,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 660,
                      "src": "3050:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 264,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3050:68:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 265,
                  "nodeType": "ExpressionStatement",
                  "src": "3050:68:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 267,
                        "name": "_swapID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 230,
                        "src": "3143:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 266,
                      "name": "Expire",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "3136:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32)"
                      }
                    },
                    "id": 268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3136:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 269,
                  "nodeType": "EmitStatement",
                  "src": "3131:20:0"
                }
              ]
            },
            "documentation": null,
            "id": 271,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 233,
                    "name": "_swapID",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 230,
                    "src": "2758:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 234,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 232,
                  "name": "onlyOpenSwaps",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 72,
                  "src": "2744:13:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_bytes32_$",
                    "typeString": "modifier (bytes32)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2744:22:0"
              }
            ],
            "name": "expire",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 231,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 230,
                  "name": "_swapID",
                  "nodeType": "VariableDeclaration",
                  "scope": 271,
                  "src": "2720:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 229,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2720:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2719:17:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 235,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2767:0:0"
            },
            "scope": 319,
            "src": "2704:455:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 317,
              "nodeType": "Block",
              "src": "3373:236:0",
              "statements": [
                {
                  "assignments": [
                    291
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 291,
                      "name": "swap",
                      "nodeType": "VariableDeclaration",
                      "scope": 318,
                      "src": "3384:16:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Swap_$15_memory_ptr",
                        "typeString": "struct AtomicSwapERC20ToERC20.Swap memory"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 290,
                        "name": "Swap",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 15,
                        "src": "3384:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$15_storage_ptr",
                          "typeString": "struct AtomicSwapERC20ToERC20.Swap storage pointer"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 295,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 292,
                      "name": "swaps",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24,
                      "src": "3403:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Swap_$15_storage_$",
                        "typeString": "mapping(bytes32 => struct AtomicSwapERC20ToERC20.Swap storage ref)"
                      }
                    },
                    "id": 294,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 293,
                      "name": "_swapID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 273,
                      "src": "3409:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3403:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Swap_$15_storage",
                      "typeString": "struct AtomicSwapERC20ToERC20.Swap storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3384:33:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 300,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 296,
                      "name": "state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 288,
                      "src": "3428:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_States_$20",
                        "typeString": "enum AtomicSwapERC20ToERC20.States"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 297,
                        "name": "swapStates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28,
                        "src": "3436:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_enum$_States_$20_$",
                          "typeString": "mapping(bytes32 => enum AtomicSwapERC20ToERC20.States)"
                        }
                      },
                      "id": 299,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 298,
                        "name": "_swapID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 273,
                        "src": "3447:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3436:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_States_$20",
                        "typeString": "enum AtomicSwapERC20ToERC20.States"
                      }
                    },
                    "src": "3428:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_States_$20",
                      "typeString": "enum AtomicSwapERC20ToERC20.States"
                    }
                  },
                  "id": 301,
                  "nodeType": "ExpressionStatement",
                  "src": "3428:27:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 302,
                          "name": "swap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 291,
                          "src": "3474:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$15_memory_ptr",
                            "typeString": "struct AtomicSwapERC20ToERC20.Swap memory"
                          }
                        },
                        "id": 303,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "openValue",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4,
                        "src": "3474:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 304,
                          "name": "swap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 291,
                          "src": "3490:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$15_memory_ptr",
                            "typeString": "struct AtomicSwapERC20ToERC20.Swap memory"
                          }
                        },
                        "id": 305,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "openTrader",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6,
                        "src": "3490:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 306,
                          "name": "swap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 291,
                          "src": "3507:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$15_memory_ptr",
                            "typeString": "struct AtomicSwapERC20ToERC20.Swap memory"
                          }
                        },
                        "id": 307,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "openContractAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 8,
                        "src": "3507:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 308,
                          "name": "swap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 291,
                          "src": "3533:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$15_memory_ptr",
                            "typeString": "struct AtomicSwapERC20ToERC20.Swap memory"
                          }
                        },
                        "id": 309,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "closeValue",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10,
                        "src": "3533:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 310,
                          "name": "swap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 291,
                          "src": "3550:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$15_memory_ptr",
                            "typeString": "struct AtomicSwapERC20ToERC20.Swap memory"
                          }
                        },
                        "id": 311,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "closeTrader",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 12,
                        "src": "3550:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 312,
                          "name": "swap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 291,
                          "src": "3568:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$15_memory_ptr",
                            "typeString": "struct AtomicSwapERC20ToERC20.Swap memory"
                          }
                        },
                        "id": 313,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "closeContractAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14,
                        "src": "3568:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 314,
                        "name": "state",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 288,
                        "src": "3595:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_States_$20",
                          "typeString": "enum AtomicSwapERC20ToERC20.States"
                        }
                      }
                    ],
                    "id": 315,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "3473:128:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_address_$_t_address_$_t_uint256_$_t_address_$_t_address_$_t_enum$_States_$20_$",
                      "typeString": "tuple(uint256,address,address,uint256,address,address,enum AtomicSwapERC20ToERC20.States)"
                    }
                  },
                  "functionReturnParameters": 289,
                  "id": 316,
                  "nodeType": "Return",
                  "src": "3466:135:0"
                }
              ]
            },
            "documentation": null,
            "id": 318,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "check",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 274,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 273,
                  "name": "_swapID",
                  "nodeType": "VariableDeclaration",
                  "scope": 318,
                  "src": "3182:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 272,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3182:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3181:17:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 289,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 276,
                  "name": "openValue",
                  "nodeType": "VariableDeclaration",
                  "scope": 318,
                  "src": "3220:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 275,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3220:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 278,
                  "name": "openTrader",
                  "nodeType": "VariableDeclaration",
                  "scope": 318,
                  "src": "3239:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 277,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3239:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 280,
                  "name": "openContractAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 318,
                  "src": "3259:27:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 279,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3259:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 282,
                  "name": "closeValue",
                  "nodeType": "VariableDeclaration",
                  "scope": 318,
                  "src": "3288:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 281,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3288:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 284,
                  "name": "closeTrader",
                  "nodeType": "VariableDeclaration",
                  "scope": 318,
                  "src": "3308:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 283,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3308:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 286,
                  "name": "closeContractAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 318,
                  "src": "3329:28:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 285,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3329:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 288,
                  "name": "state",
                  "nodeType": "VariableDeclaration",
                  "scope": 318,
                  "src": "3359:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_States_$20",
                    "typeString": "enum AtomicSwapERC20ToERC20.States"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 287,
                    "name": "States",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 20,
                    "src": "3359:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_States_$20",
                      "typeString": "enum AtomicSwapERC20ToERC20.States"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3219:153:0"
            },
            "scope": 319,
            "src": "3167:442:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 320,
        "src": "53:3559:0"
      }
    ],
    "src": "0:3612:0"
  },
  "legacyAST": {
    "absolutePath": "/C/Projects/Aerum/aerumnet/solidity-aerum-network/contracts/swap/AtomicSwapERC20ToERC20.sol",
    "exportedSymbols": {
      "AtomicSwapERC20ToERC20": [
        319
      ]
    },
    "id": 320,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:0"
      },
      {
        "absolutePath": "/C/Projects/Aerum/aerumnet/solidity-aerum-network/contracts/swap/ERC20.sol",
        "file": "./ERC20.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 320,
        "sourceUnit": 645,
        "src": "28:21:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 319,
        "linearizedBaseContracts": [
          319
        ],
        "name": "AtomicSwapERC20ToERC20",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "AtomicSwapERC20ToERC20.Swap",
            "id": 15,
            "members": [
              {
                "constant": false,
                "id": 4,
                "name": "openValue",
                "nodeType": "VariableDeclaration",
                "scope": 15,
                "src": "117:17:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "117:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 6,
                "name": "openTrader",
                "nodeType": "VariableDeclaration",
                "scope": 15,
                "src": "145:18:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 5,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "145:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 8,
                "name": "openContractAddress",
                "nodeType": "VariableDeclaration",
                "scope": 15,
                "src": "174:27:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 7,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "174:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 10,
                "name": "closeValue",
                "nodeType": "VariableDeclaration",
                "scope": 15,
                "src": "212:18:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 9,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "212:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 12,
                "name": "closeTrader",
                "nodeType": "VariableDeclaration",
                "scope": 15,
                "src": "241:19:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 11,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "241:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 14,
                "name": "closeContractAddress",
                "nodeType": "VariableDeclaration",
                "scope": 15,
                "src": "271:28:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 13,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "271:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Swap",
            "nodeType": "StructDefinition",
            "scope": 319,
            "src": "94:213:0",
            "visibility": "public"
          },
          {
            "canonicalName": "AtomicSwapERC20ToERC20.States",
            "id": 20,
            "members": [
              {
                "id": 16,
                "name": "INVALID",
                "nodeType": "EnumValue",
                "src": "338:7:0"
              },
              {
                "id": 17,
                "name": "OPEN",
                "nodeType": "EnumValue",
                "src": "356:4:0"
              },
              {
                "id": 18,
                "name": "CLOSED",
                "nodeType": "EnumValue",
                "src": "371:6:0"
              },
              {
                "id": 19,
                "name": "EXPIRED",
                "nodeType": "EnumValue",
                "src": "388:7:0"
              }
            ],
            "name": "States",
            "nodeType": "EnumDefinition",
            "src": "315:87:0"
          },
          {
            "constant": false,
            "id": 24,
            "name": "swaps",
            "nodeType": "VariableDeclaration",
            "scope": 319,
            "src": "410:39:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Swap_$15_storage_$",
              "typeString": "mapping(bytes32 => struct AtomicSwapERC20ToERC20.Swap storage ref)"
            },
            "typeName": {
              "id": 23,
              "keyType": {
                "id": 21,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "419:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "410:25:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Swap_$15_storage_$",
                "typeString": "mapping(bytes32 => struct AtomicSwapERC20ToERC20.Swap storage ref)"
              },
              "valueType": {
                "contractScope": null,
                "id": 22,
                "name": "Swap",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 15,
                "src": "430:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Swap_$15_storage_ptr",
                  "typeString": "struct AtomicSwapERC20ToERC20.Swap storage pointer"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 28,
            "name": "swapStates",
            "nodeType": "VariableDeclaration",
            "scope": 319,
            "src": "456:46:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_enum$_States_$20_$",
              "typeString": "mapping(bytes32 => enum AtomicSwapERC20ToERC20.States)"
            },
            "typeName": {
              "id": 27,
              "keyType": {
                "id": 25,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "465:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "456:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_enum$_States_$20_$",
                "typeString": "mapping(bytes32 => enum AtomicSwapERC20ToERC20.States)"
              },
              "valueType": {
                "contractScope": null,
                "id": 26,
                "name": "States",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 20,
                "src": "476:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_States_$20",
                  "typeString": "enum AtomicSwapERC20ToERC20.States"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 34,
            "name": "Open",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 33,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30,
                  "indexed": false,
                  "name": "_swapID",
                  "nodeType": "VariableDeclaration",
                  "scope": 34,
                  "src": "522:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 29,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "522:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32,
                  "indexed": false,
                  "name": "_closeTrader",
                  "nodeType": "VariableDeclaration",
                  "scope": 34,
                  "src": "539:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 31,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "539:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "521:39:0"
            },
            "src": "511:50:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 38,
            "name": "Expire",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 37,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36,
                  "indexed": false,
                  "name": "_swapID",
                  "nodeType": "VariableDeclaration",
                  "scope": 38,
                  "src": "580:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 35,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "580:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "579:17:0"
            },
            "src": "567:30:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 42,
            "name": "Close",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 41,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40,
                  "indexed": false,
                  "name": "_swapID",
                  "nodeType": "VariableDeclaration",
                  "scope": 42,
                  "src": "615:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 39,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "615:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "614:17:0"
            },
            "src": "603:29:0"
          },
          {
            "body": {
              "id": 56,
              "nodeType": "Block",
              "src": "683:78:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_States_$20",
                          "typeString": "enum AtomicSwapERC20ToERC20.States"
                        },
                        "id": 52,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 47,
                            "name": "swapStates",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28,
                            "src": "703:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_enum$_States_$20_$",
                              "typeString": "mapping(bytes32 => enum AtomicSwapERC20ToERC20.States)"
                            }
                          },
                          "id": 49,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 48,
                            "name": "_swapID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44,
                            "src": "714:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "703:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_States_$20",
                            "typeString": "enum AtomicSwapERC20ToERC20.States"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 50,
                            "name": "States",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20,
                            "src": "726:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_States_$20_$",
                              "typeString": "type(enum AtomicSwapERC20ToERC20.States)"
                            }
                          },
                          "id": 51,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "INVALID",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "726:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_States_$20",
                            "typeString": "enum AtomicSwapERC20ToERC20.States"
                          }
                        },
                        "src": "703:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 46,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 660,
                      "src": "694:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 53,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "694:47:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54,
                  "nodeType": "ExpressionStatement",
                  "src": "694:47:0"
                },
                {
                  "id": 55,
                  "nodeType": "PlaceholderStatement",
                  "src": "752:1:0"
                }
              ]
            },
            "documentation": null,
            "id": 57,
            "name": "onlyInvalidSwaps",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 45,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44,
                  "name": "_swapID",
                  "nodeType": "VariableDeclaration",
                  "scope": 57,
                  "src": "666:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 43,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "666:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "665:17:0"
            },
            "src": "640:121:0",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 71,
              "nodeType": "Block",
              "src": "809:75:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_States_$20",
                          "typeString": "enum AtomicSwapERC20ToERC20.States"
                        },
                        "id": 67,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 62,
                            "name": "swapStates",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28,
                            "src": "829:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_enum$_States_$20_$",
                              "typeString": "mapping(bytes32 => enum AtomicSwapERC20ToERC20.States)"
                            }
                          },
                          "id": 64,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 63,
                            "name": "_swapID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59,
                            "src": "840:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "829:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_States_$20",
                            "typeString": "enum AtomicSwapERC20ToERC20.States"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 65,
                            "name": "States",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20,
                            "src": "852:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_States_$20_$",
                              "typeString": "type(enum AtomicSwapERC20ToERC20.States)"
                            }
                          },
                          "id": 66,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "OPEN",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "852:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_States_$20",
                            "typeString": "enum AtomicSwapERC20ToERC20.States"
                          }
                        },
                        "src": "829:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 61,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 660,
                      "src": "820:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 68,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "820:44:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 69,
                  "nodeType": "ExpressionStatement",
                  "src": "820:44:0"
                },
                {
                  "id": 70,
                  "nodeType": "PlaceholderStatement",
                  "src": "875:1:0"
                }
              ]
            },
            "documentation": null,
            "id": 72,
            "name": "onlyOpenSwaps",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 60,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59,
                  "name": "_swapID",
                  "nodeType": "VariableDeclaration",
                  "scope": 72,
                  "src": "792:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 58,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "792:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "791:17:0"
            },
            "src": "769:115:0",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 151,
              "nodeType": "Block",
              "src": "1080:796:0",
              "statements": [
                {
                  "assignments": [
                    91
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 91,
                      "name": "openERC20Contract",
                      "nodeType": "VariableDeclaration",
                      "scope": 152,
                      "src": "1160:23:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$644",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 90,
                        "name": "ERC20",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 644,
                        "src": "1160:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$644",
                          "typeString": "contract ERC20"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 95,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 93,
                        "name": "_openContractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78,
                        "src": "1192:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 92,
                      "name": "ERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 644,
                      "src": "1186:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC20_$644_$",
                        "typeString": "type(contract ERC20)"
                      }
                    },
                    "id": 94,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1186:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$644",
                      "typeString": "contract ERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1160:53:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 97,
                          "name": "_openValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76,
                          "src": "1232:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 100,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 657,
                                "src": "1274:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 101,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1274:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 103,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 670,
                                  "src": "1294:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_AtomicSwapERC20ToERC20_$319",
                                    "typeString": "contract AtomicSwapERC20ToERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_AtomicSwapERC20ToERC20_$319",
                                    "typeString": "contract AtomicSwapERC20ToERC20"
                                  }
                                ],
                                "id": 102,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1286:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": "address"
                              },
                              "id": 104,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1286:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 98,
                              "name": "openERC20Contract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 91,
                              "src": "1246:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$644",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 99,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "allowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 614,
                            "src": "1246:27:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 105,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1246:54:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1232:68:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 96,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 660,
                      "src": "1224:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1224:77:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 108,
                  "nodeType": "ExpressionStatement",
                  "src": "1224:77:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 112,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 657,
                              "src": "1351:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 113,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1351:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 115,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 670,
                                "src": "1371:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AtomicSwapERC20ToERC20_$319",
                                  "typeString": "contract AtomicSwapERC20ToERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_AtomicSwapERC20ToERC20_$319",
                                  "typeString": "contract AtomicSwapERC20ToERC20"
                                }
                              ],
                              "id": 114,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1363:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 116,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1363:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 117,
                            "name": "_openValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76,
                            "src": "1378:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 110,
                            "name": "openERC20Contract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 91,
                            "src": "1320:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$644",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 634,
                          "src": "1320:30:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1320:69:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 109,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 660,
                      "src": "1312:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1312:78:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 120,
                  "nodeType": "ExpressionStatement",
                  "src": "1312:78:0"
                },
                {
                  "assignments": [
                    122
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 122,
                      "name": "swap",
                      "nodeType": "VariableDeclaration",
                      "scope": 152,
                      "src": "1446:16:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Swap_$15_memory_ptr",
                        "typeString": "struct AtomicSwapERC20ToERC20.Swap memory"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 121,
                        "name": "Swap",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 15,
                        "src": "1446:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$15_storage_ptr",
                          "typeString": "struct AtomicSwapERC20ToERC20.Swap storage pointer"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 132,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 124,
                        "name": "_openValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76,
                        "src": "1496:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 125,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 657,
                          "src": "1533:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1533:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 127,
                        "name": "_openContractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78,
                        "src": "1579:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 128,
                        "name": "_closeValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80,
                        "src": "1626:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 129,
                        "name": "_closeTrader",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82,
                        "src": "1665:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 130,
                        "name": "_closeContractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84,
                        "src": "1714:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": null,
                      "id": 123,
                      "name": "Swap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15,
                      "src": "1465:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Swap_$15_storage_ptr_$",
                        "typeString": "type(struct AtomicSwapERC20ToERC20.Swap storage pointer)"
                      }
                    },
                    "id": 131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "openValue",
                      "openTrader",
                      "openContractAddress",
                      "closeValue",
                      "closeTrader",
                      "closeContractAddress"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "1465:282:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Swap_$15_memory",
                      "typeString": "struct AtomicSwapERC20ToERC20.Swap memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1446:301:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 133,
                        "name": "swaps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24,
                        "src": "1758:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Swap_$15_storage_$",
                          "typeString": "mapping(bytes32 => struct AtomicSwapERC20ToERC20.Swap storage ref)"
                        }
                      },
                      "id": 135,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 134,
                        "name": "_swapID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74,
                        "src": "1764:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1758:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Swap_$15_storage",
                        "typeString": "struct AtomicSwapERC20ToERC20.Swap storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 136,
                      "name": "swap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 122,
                      "src": "1775:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Swap_$15_memory_ptr",
                        "typeString": "struct AtomicSwapERC20ToERC20.Swap memory"
                      }
                    },
                    "src": "1758:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Swap_$15_storage",
                      "typeString": "struct AtomicSwapERC20ToERC20.Swap storage ref"
                    }
                  },
                  "id": 138,
                  "nodeType": "ExpressionStatement",
                  "src": "1758:21:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 139,
                        "name": "swapStates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28,
                        "src": "1790:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_enum$_States_$20_$",
                          "typeString": "mapping(bytes32 => enum AtomicSwapERC20ToERC20.States)"
                        }
                      },
                      "id": 141,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 140,
                        "name": "_swapID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74,
                        "src": "1801:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1790:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_States_$20",
                        "typeString": "enum AtomicSwapERC20ToERC20.States"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 142,
                        "name": "States",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "1812:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_States_$20_$",
                          "typeString": "type(enum AtomicSwapERC20ToERC20.States)"
                        }
                      },
                      "id": 143,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "OPEN",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1812:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_States_$20",
                        "typeString": "enum AtomicSwapERC20ToERC20.States"
                      }
                    },
                    "src": "1790:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_States_$20",
                      "typeString": "enum AtomicSwapERC20ToERC20.States"
                    }
                  },
                  "id": 145,
                  "nodeType": "ExpressionStatement",
                  "src": "1790:33:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 147,
                        "name": "_swapID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74,
                        "src": "1846:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 148,
                        "name": "_closeTrader",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82,
                        "src": "1855:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 146,
                      "name": "Open",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34,
                      "src": "1841:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1841:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 150,
                  "nodeType": "EmitStatement",
                  "src": "1836:32:0"
                }
              ]
            },
            "documentation": null,
            "id": 152,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 87,
                    "name": "_swapID",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 74,
                    "src": "1071:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 88,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 86,
                  "name": "onlyInvalidSwaps",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 57,
                  "src": "1054:16:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_bytes32_$",
                    "typeString": "modifier (bytes32)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1054:25:0"
              }
            ],
            "name": "open",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 85,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74,
                  "name": "_swapID",
                  "nodeType": "VariableDeclaration",
                  "scope": 152,
                  "src": "906:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 73,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "906:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 76,
                  "name": "_openValue",
                  "nodeType": "VariableDeclaration",
                  "scope": 152,
                  "src": "923:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 75,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "923:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 78,
                  "name": "_openContractAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 152,
                  "src": "943:28:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 77,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "943:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 80,
                  "name": "_closeValue",
                  "nodeType": "VariableDeclaration",
                  "scope": 152,
                  "src": "973:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 79,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "973:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 82,
                  "name": "_closeTrader",
                  "nodeType": "VariableDeclaration",
                  "scope": 152,
                  "src": "994:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 81,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "994:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 84,
                  "name": "_closeContractAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 152,
                  "src": "1016:29:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 83,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1016:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "905:141:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 89,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1080:0:0"
            },
            "scope": 319,
            "src": "892:984:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 227,
              "nodeType": "Block",
              "src": "1946:750:0",
              "statements": [
                {
                  "assignments": [
                    161
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 161,
                      "name": "swap",
                      "nodeType": "VariableDeclaration",
                      "scope": 228,
                      "src": "1985:16:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Swap_$15_memory_ptr",
                        "typeString": "struct AtomicSwapERC20ToERC20.Swap memory"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 160,
                        "name": "Swap",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 15,
                        "src": "1985:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$15_storage_ptr",
                          "typeString": "struct AtomicSwapERC20ToERC20.Swap storage pointer"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 165,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 162,
                      "name": "swaps",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24,
                      "src": "2004:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Swap_$15_storage_$",
                        "typeString": "mapping(bytes32 => struct AtomicSwapERC20ToERC20.Swap storage ref)"
                      }
                    },
                    "id": 164,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 163,
                      "name": "_swapID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 154,
                      "src": "2010:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2004:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Swap_$15_storage",
                      "typeString": "struct AtomicSwapERC20ToERC20.Swap storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1985:33:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 166,
                        "name": "swapStates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28,
                        "src": "2029:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_enum$_States_$20_$",
                          "typeString": "mapping(bytes32 => enum AtomicSwapERC20ToERC20.States)"
                        }
                      },
                      "id": 168,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 167,
                        "name": "_swapID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 154,
                        "src": "2040:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2029:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_States_$20",
                        "typeString": "enum AtomicSwapERC20ToERC20.States"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 169,
                        "name": "States",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "2051:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_States_$20_$",
                          "typeString": "type(enum AtomicSwapERC20ToERC20.States)"
                        }
                      },
                      "id": 170,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "CLOSED",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2051:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_States_$20",
                        "typeString": "enum AtomicSwapERC20ToERC20.States"
                      }
                    },
                    "src": "2029:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_States_$20",
                      "typeString": "enum AtomicSwapERC20ToERC20.States"
                    }
                  },
                  "id": 172,
                  "nodeType": "ExpressionStatement",
                  "src": "2029:35:0"
                },
                {
                  "assignments": [
                    174
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 174,
                      "name": "closeERC20Contract",
                      "nodeType": "VariableDeclaration",
                      "scope": 228,
                      "src": "2163:24:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$644",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 173,
                        "name": "ERC20",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 644,
                        "src": "2163:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$644",
                          "typeString": "contract ERC20"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 179,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 176,
                          "name": "swap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 161,
                          "src": "2196:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$15_memory_ptr",
                            "typeString": "struct AtomicSwapERC20ToERC20.Swap memory"
                          }
                        },
                        "id": 177,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "closeContractAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14,
                        "src": "2196:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 175,
                      "name": "ERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 644,
                      "src": "2190:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC20_$644_$",
                        "typeString": "type(contract ERC20)"
                      }
                    },
                    "id": 178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2190:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$644",
                      "typeString": "contract ERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2163:59:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 181,
                            "name": "swap",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 161,
                            "src": "2241:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Swap_$15_memory_ptr",
                              "typeString": "struct AtomicSwapERC20ToERC20.Swap memory"
                            }
                          },
                          "id": 182,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "closeValue",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10,
                          "src": "2241:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 185,
                                "name": "swap",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 161,
                                "src": "2289:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Swap_$15_memory_ptr",
                                  "typeString": "struct AtomicSwapERC20ToERC20.Swap memory"
                                }
                              },
                              "id": 186,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "closeTrader",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 12,
                              "src": "2289:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 188,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 670,
                                  "src": "2315:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_AtomicSwapERC20ToERC20_$319",
                                    "typeString": "contract AtomicSwapERC20ToERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_AtomicSwapERC20ToERC20_$319",
                                    "typeString": "contract AtomicSwapERC20ToERC20"
                                  }
                                ],
                                "id": 187,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2307:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": "address"
                              },
                              "id": 189,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2307:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 183,
                              "name": "closeERC20Contract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 174,
                              "src": "2260:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$644",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 184,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "allowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 614,
                            "src": "2260:28:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 190,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2260:61:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2241:80:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 180,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 660,
                      "src": "2233:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2233:89:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 193,
                  "nodeType": "ExpressionStatement",
                  "src": "2233:89:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 197,
                              "name": "swap",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 161,
                              "src": "2373:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Swap_$15_memory_ptr",
                                "typeString": "struct AtomicSwapERC20ToERC20.Swap memory"
                              }
                            },
                            "id": 198,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "closeTrader",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 12,
                            "src": "2373:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 199,
                              "name": "swap",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 161,
                              "src": "2391:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Swap_$15_memory_ptr",
                                "typeString": "struct AtomicSwapERC20ToERC20.Swap memory"
                              }
                            },
                            "id": 200,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "openTrader",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 6,
                            "src": "2391:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 201,
                              "name": "swap",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 161,
                              "src": "2408:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Swap_$15_memory_ptr",
                                "typeString": "struct AtomicSwapERC20ToERC20.Swap memory"
                              }
                            },
                            "id": 202,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "closeValue",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10,
                            "src": "2408:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 195,
                            "name": "closeERC20Contract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 174,
                            "src": "2341:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$644",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 196,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 634,
                          "src": "2341:31:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 203,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2341:83:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 194,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 660,
                      "src": "2333:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 204,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2333:92:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 205,
                  "nodeType": "ExpressionStatement",
                  "src": "2333:92:0"
                },
                {
                  "assignments": [
                    207
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 207,
                      "name": "openERC20Contract",
                      "nodeType": "VariableDeclaration",
                      "scope": 228,
                      "src": "2519:23:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$644",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 206,
                        "name": "ERC20",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 644,
                        "src": "2519:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$644",
                          "typeString": "contract ERC20"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 212,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 209,
                          "name": "swap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 161,
                          "src": "2551:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$15_memory_ptr",
                            "typeString": "struct AtomicSwapERC20ToERC20.Swap memory"
                          }
                        },
                        "id": 210,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "openContractAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 8,
                        "src": "2551:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 208,
                      "name": "ERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 644,
                      "src": "2545:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC20_$644_$",
                        "typeString": "type(contract ERC20)"
                      }
                    },
                    "id": 211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2545:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$644",
                      "typeString": "contract ERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2519:57:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 216,
                              "name": "swap",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 161,
                              "src": "2622:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Swap_$15_memory_ptr",
                                "typeString": "struct AtomicSwapERC20ToERC20.Swap memory"
                              }
                            },
                            "id": 217,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "closeTrader",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 12,
                            "src": "2622:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 218,
                              "name": "swap",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 161,
                              "src": "2640:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Swap_$15_memory_ptr",
                                "typeString": "struct AtomicSwapERC20ToERC20.Swap memory"
                              }
                            },
                            "id": 219,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "openValue",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4,
                            "src": "2640:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 214,
                            "name": "openERC20Contract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 207,
                            "src": "2595:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$644",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 215,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 623,
                          "src": "2595:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 220,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2595:60:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 213,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 660,
                      "src": "2587:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2587:69:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 222,
                  "nodeType": "ExpressionStatement",
                  "src": "2587:69:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 224,
                        "name": "_swapID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 154,
                        "src": "2680:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 223,
                      "name": "Close",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42,
                      "src": "2674:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32)"
                      }
                    },
                    "id": 225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2674:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 226,
                  "nodeType": "EmitStatement",
                  "src": "2669:19:0"
                }
              ]
            },
            "documentation": null,
            "id": 228,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 157,
                    "name": "_swapID",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 154,
                    "src": "1937:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 158,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 156,
                  "name": "onlyOpenSwaps",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 72,
                  "src": "1923:13:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_bytes32_$",
                    "typeString": "modifier (bytes32)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1923:22:0"
              }
            ],
            "name": "close",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 155,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 154,
                  "name": "_swapID",
                  "nodeType": "VariableDeclaration",
                  "scope": 228,
                  "src": "1899:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 153,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1899:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1898:17:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 159,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1946:0:0"
            },
            "scope": 319,
            "src": "1884:812:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 270,
              "nodeType": "Block",
              "src": "2767:392:0",
              "statements": [
                {
                  "assignments": [
                    237
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 237,
                      "name": "swap",
                      "nodeType": "VariableDeclaration",
                      "scope": 271,
                      "src": "2807:16:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Swap_$15_memory_ptr",
                        "typeString": "struct AtomicSwapERC20ToERC20.Swap memory"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 236,
                        "name": "Swap",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 15,
                        "src": "2807:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$15_storage_ptr",
                          "typeString": "struct AtomicSwapERC20ToERC20.Swap storage pointer"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 241,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 238,
                      "name": "swaps",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24,
                      "src": "2826:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Swap_$15_storage_$",
                        "typeString": "mapping(bytes32 => struct AtomicSwapERC20ToERC20.Swap storage ref)"
                      }
                    },
                    "id": 240,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 239,
                      "name": "_swapID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 230,
                      "src": "2832:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2826:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Swap_$15_storage",
                      "typeString": "struct AtomicSwapERC20ToERC20.Swap storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2807:33:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 242,
                        "name": "swapStates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28,
                        "src": "2851:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_enum$_States_$20_$",
                          "typeString": "mapping(bytes32 => enum AtomicSwapERC20ToERC20.States)"
                        }
                      },
                      "id": 244,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 243,
                        "name": "_swapID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 230,
                        "src": "2862:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2851:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_States_$20",
                        "typeString": "enum AtomicSwapERC20ToERC20.States"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 245,
                        "name": "States",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "2873:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_States_$20_$",
                          "typeString": "type(enum AtomicSwapERC20ToERC20.States)"
                        }
                      },
                      "id": 246,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "EXPIRED",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2873:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_States_$20",
                        "typeString": "enum AtomicSwapERC20ToERC20.States"
                      }
                    },
                    "src": "2851:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_States_$20",
                      "typeString": "enum AtomicSwapERC20ToERC20.States"
                    }
                  },
                  "id": 248,
                  "nodeType": "ExpressionStatement",
                  "src": "2851:36:0"
                },
                {
                  "assignments": [
                    250
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 250,
                      "name": "openERC20Contract",
                      "nodeType": "VariableDeclaration",
                      "scope": 271,
                      "src": "2982:23:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$644",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 249,
                        "name": "ERC20",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 644,
                        "src": "2982:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$644",
                          "typeString": "contract ERC20"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 255,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 252,
                          "name": "swap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 237,
                          "src": "3014:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$15_memory_ptr",
                            "typeString": "struct AtomicSwapERC20ToERC20.Swap memory"
                          }
                        },
                        "id": 253,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "openContractAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 8,
                        "src": "3014:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 251,
                      "name": "ERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 644,
                      "src": "3008:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC20_$644_$",
                        "typeString": "type(contract ERC20)"
                      }
                    },
                    "id": 254,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3008:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$644",
                      "typeString": "contract ERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2982:57:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 259,
                              "name": "swap",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 237,
                              "src": "3085:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Swap_$15_memory_ptr",
                                "typeString": "struct AtomicSwapERC20ToERC20.Swap memory"
                              }
                            },
                            "id": 260,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "openTrader",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 6,
                            "src": "3085:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 261,
                              "name": "swap",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 237,
                              "src": "3102:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Swap_$15_memory_ptr",
                                "typeString": "struct AtomicSwapERC20ToERC20.Swap memory"
                              }
                            },
                            "id": 262,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "openValue",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4,
                            "src": "3102:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 257,
                            "name": "openERC20Contract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 250,
                            "src": "3058:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$644",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 258,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 623,
                          "src": "3058:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 263,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3058:59:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 256,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 660,
                      "src": "3050:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 264,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3050:68:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 265,
                  "nodeType": "ExpressionStatement",
                  "src": "3050:68:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 267,
                        "name": "_swapID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 230,
                        "src": "3143:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 266,
                      "name": "Expire",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "3136:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32)"
                      }
                    },
                    "id": 268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3136:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 269,
                  "nodeType": "EmitStatement",
                  "src": "3131:20:0"
                }
              ]
            },
            "documentation": null,
            "id": 271,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 233,
                    "name": "_swapID",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 230,
                    "src": "2758:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 234,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 232,
                  "name": "onlyOpenSwaps",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 72,
                  "src": "2744:13:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_bytes32_$",
                    "typeString": "modifier (bytes32)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2744:22:0"
              }
            ],
            "name": "expire",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 231,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 230,
                  "name": "_swapID",
                  "nodeType": "VariableDeclaration",
                  "scope": 271,
                  "src": "2720:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 229,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2720:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2719:17:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 235,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2767:0:0"
            },
            "scope": 319,
            "src": "2704:455:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 317,
              "nodeType": "Block",
              "src": "3373:236:0",
              "statements": [
                {
                  "assignments": [
                    291
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 291,
                      "name": "swap",
                      "nodeType": "VariableDeclaration",
                      "scope": 318,
                      "src": "3384:16:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Swap_$15_memory_ptr",
                        "typeString": "struct AtomicSwapERC20ToERC20.Swap memory"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 290,
                        "name": "Swap",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 15,
                        "src": "3384:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$15_storage_ptr",
                          "typeString": "struct AtomicSwapERC20ToERC20.Swap storage pointer"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 295,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 292,
                      "name": "swaps",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24,
                      "src": "3403:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Swap_$15_storage_$",
                        "typeString": "mapping(bytes32 => struct AtomicSwapERC20ToERC20.Swap storage ref)"
                      }
                    },
                    "id": 294,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 293,
                      "name": "_swapID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 273,
                      "src": "3409:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3403:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Swap_$15_storage",
                      "typeString": "struct AtomicSwapERC20ToERC20.Swap storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3384:33:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 300,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 296,
                      "name": "state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 288,
                      "src": "3428:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_States_$20",
                        "typeString": "enum AtomicSwapERC20ToERC20.States"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 297,
                        "name": "swapStates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28,
                        "src": "3436:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_enum$_States_$20_$",
                          "typeString": "mapping(bytes32 => enum AtomicSwapERC20ToERC20.States)"
                        }
                      },
                      "id": 299,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 298,
                        "name": "_swapID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 273,
                        "src": "3447:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3436:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_States_$20",
                        "typeString": "enum AtomicSwapERC20ToERC20.States"
                      }
                    },
                    "src": "3428:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_States_$20",
                      "typeString": "enum AtomicSwapERC20ToERC20.States"
                    }
                  },
                  "id": 301,
                  "nodeType": "ExpressionStatement",
                  "src": "3428:27:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 302,
                          "name": "swap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 291,
                          "src": "3474:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$15_memory_ptr",
                            "typeString": "struct AtomicSwapERC20ToERC20.Swap memory"
                          }
                        },
                        "id": 303,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "openValue",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4,
                        "src": "3474:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 304,
                          "name": "swap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 291,
                          "src": "3490:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$15_memory_ptr",
                            "typeString": "struct AtomicSwapERC20ToERC20.Swap memory"
                          }
                        },
                        "id": 305,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "openTrader",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6,
                        "src": "3490:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 306,
                          "name": "swap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 291,
                          "src": "3507:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$15_memory_ptr",
                            "typeString": "struct AtomicSwapERC20ToERC20.Swap memory"
                          }
                        },
                        "id": 307,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "openContractAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 8,
                        "src": "3507:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 308,
                          "name": "swap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 291,
                          "src": "3533:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$15_memory_ptr",
                            "typeString": "struct AtomicSwapERC20ToERC20.Swap memory"
                          }
                        },
                        "id": 309,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "closeValue",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10,
                        "src": "3533:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 310,
                          "name": "swap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 291,
                          "src": "3550:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$15_memory_ptr",
                            "typeString": "struct AtomicSwapERC20ToERC20.Swap memory"
                          }
                        },
                        "id": 311,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "closeTrader",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 12,
                        "src": "3550:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 312,
                          "name": "swap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 291,
                          "src": "3568:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$15_memory_ptr",
                            "typeString": "struct AtomicSwapERC20ToERC20.Swap memory"
                          }
                        },
                        "id": 313,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "closeContractAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14,
                        "src": "3568:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 314,
                        "name": "state",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 288,
                        "src": "3595:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_States_$20",
                          "typeString": "enum AtomicSwapERC20ToERC20.States"
                        }
                      }
                    ],
                    "id": 315,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "3473:128:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_address_$_t_address_$_t_uint256_$_t_address_$_t_address_$_t_enum$_States_$20_$",
                      "typeString": "tuple(uint256,address,address,uint256,address,address,enum AtomicSwapERC20ToERC20.States)"
                    }
                  },
                  "functionReturnParameters": 289,
                  "id": 316,
                  "nodeType": "Return",
                  "src": "3466:135:0"
                }
              ]
            },
            "documentation": null,
            "id": 318,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "check",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 274,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 273,
                  "name": "_swapID",
                  "nodeType": "VariableDeclaration",
                  "scope": 318,
                  "src": "3182:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 272,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3182:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3181:17:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 289,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 276,
                  "name": "openValue",
                  "nodeType": "VariableDeclaration",
                  "scope": 318,
                  "src": "3220:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 275,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3220:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 278,
                  "name": "openTrader",
                  "nodeType": "VariableDeclaration",
                  "scope": 318,
                  "src": "3239:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 277,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3239:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 280,
                  "name": "openContractAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 318,
                  "src": "3259:27:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 279,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3259:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 282,
                  "name": "closeValue",
                  "nodeType": "VariableDeclaration",
                  "scope": 318,
                  "src": "3288:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 281,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3288:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 284,
                  "name": "closeTrader",
                  "nodeType": "VariableDeclaration",
                  "scope": 318,
                  "src": "3308:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 283,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3308:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 286,
                  "name": "closeContractAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 318,
                  "src": "3329:28:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 285,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3329:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 288,
                  "name": "state",
                  "nodeType": "VariableDeclaration",
                  "scope": 318,
                  "src": "3359:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_States_$20",
                    "typeString": "enum AtomicSwapERC20ToERC20.States"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 287,
                    "name": "States",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 20,
                    "src": "3359:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_States_$20",
                      "typeString": "enum AtomicSwapERC20ToERC20.States"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3219:153:0"
            },
            "scope": 319,
            "src": "3167:442:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 320,
        "src": "53:3559:0"
      }
    ],
    "src": "0:3612:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.21+commit.dfe3193c.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x62b4a4259cda2604a3830ef2b39d69a19702d487",
      "transactionHash": "0xfccbccb116142a5e218fd7c4286a9f93c9167ff78d751acd03985af3172291df"
    },
    "8522": {
      "events": {},
      "links": {},
      "address": "0xf0c9a6f06c38b0b8ae255ef9d592e16e419f9676",
      "transactionHash": "0x2d626fea0882881be4403887999793733dbdf65250ca5882a5f14417de68d268"
    }
  },
  "schemaVersion": "2.0.0",
  "updatedAt": "2018-05-02T11:01:40.614Z"
}